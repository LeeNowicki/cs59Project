<?xml version="1.0" encoding="UTF-8"?>
<!-- Build cs59Project with non-standard source roots: src (main) + gen (generated) -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>calendarfx-app</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <!-- Java toolchain level -->
        <maven.compiler.release>17</maven.compiler.release>

        <!-- Versions in one place -->
        <javafx.version>24.0.1</javafx.version>
        <calendarfx.version>11.12.7</calendarfx.version>
        <orgjson.version>20250517</orgjson.version>
        <antlr4.version>4.13.1</antlr4.version>

        <!-- Ensure reproducible, UTF-8 builds -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!-- CalendarFX UI widgets -->
        <dependency>
            <groupId>com.calendarfx</groupId>
            <artifactId>view</artifactId>
            <version>${calendarfx.version}</version>
        </dependency>

        <!-- JavaFX modules used by the app (the plugin resolves OS classifiers) -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>${javafx.version}</version>
        </dependency>

        <!-- org.json for simple JSON handling -->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${orgjson.version}</version>
        </dependency>

        <!-- ANTLR runtime only (you already generate sources into /gen) -->
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
            <version>${antlr4.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Make Maven treat your non-standard folders as proper source roots -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <!-- main sources -->
                    <execution>
                        <id>add-main-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src</source>   <!-- your blue "src" -->
                                <source>gen</source>   <!-- your blue "gen" (generated) -->
                            </sources>
                        </configuration>
                    </execution>
                    <!-- test sources -->
                    <execution>
                        <id>add-test-sources</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>testing</source> <!-- your test folder -->
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Java compilation level -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <release>${maven.compiler.release}</release>
                </configuration>
            </plugin>

            <!-- Run with: mvn javafx:run  (set your actual main class below) -->
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <configuration>
                    <!-- If you have no package, just the class name is fine. Update if needed. -->
                    <mainClass>JSONToCalendar</mainClass>
                </configuration>
            </plugin>
        </plugins>

        <!-- Include non-code assets (e.g., images) in the jar if you load them as resources -->
        <resources>
            <resource>
                <directory>images</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
            <!-- Keep default src/main/resources too, in case you add it later -->
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
    </build>
</project>
